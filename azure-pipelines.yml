# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-latest'
#    mac:
#      imageName: 'macos-10.13'
#    windows:
#      imageName: 'vs2017-win2016'

pool:
  vmImage: $(imageName)

steps:
  # Install RUST

  # Linux and macOS.
  - script: |
      set -e
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    env:
      RUSTUP_TOOLCHAIN: ${{parameters.rust_version}}
    displayName: "Install rust (*nix)"
    condition: not(eq(variables['Agent.OS'], 'Windows_NT'))
  # Windows.
  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
      set PATH=%PATH%;%USERPROFILE%\.cargo\bin
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
    env:
      RUSTUP_TOOLCHAIN: ${{parameters.rust_version}}
    displayName: "Install rust (windows)"
    condition: eq(variables['Agent.OS'], 'Windows_NT')

  # All platforms.
  - script: |
      rustup -V
      rustup component list --installed
      rustc -Vv
      cargo -V
    displayName: Query rust and cargo versions


  # Build espanso

  - script: |
      cargo build --release
    displayName: Building espanso