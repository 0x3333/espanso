# Huge thanks to Alacritty, as their configuration served as a starting point for this one!
# See: https://github.com/alacritty/alacritty

name: Release

on:
  push:
    branches:
      # TODO: replace this one with master
      - dev-1.x-ci-pipelines

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CARGO_TERM_COLOR: always

jobs:
  extract-version:
    name: extract-version
    runs-on: ubuntu-latest
    outputs:
      espanso_version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - name: "Extract version"
        id: "version"
        run: |
          ESPANSO_VERSION=$(cat espanso/Cargo.toml | grep version | head -1 | awk -F '"' '{ print $2 }')
          echo version: $ESPANSO_VERSION
          echo "::set-output name=version::v$ESPANSO_VERSION"

  windows:
    needs: ["extract-version"]
    runs-on: windows-latest

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v2
      - name: Print target version
        run: |
          echo Using version ${{ needs.extract-version.outputs.espanso_version }}
      - name: Install cargo-make
        run: |
          cargo install --force cargo-make
      - name: Test
        run: cargo make test-binary --profile release
      - name: Build
        run: cargo make build-windows-all --profile release
      - name: Create portable mode archive
        shell: powershell
        run: |
          Rename-Item target/windows/portable espanso-portable
          Compress-Archive target/windows/espanso-portable target/windows/Espanso-Win-Portable-x86_64.zip
      - name: Calculate hashes
        shell: powershell
        run: |
          Get-FileHash target/windows/Espanso-Win-Portable-x86_64.zip -Algorithm SHA256 | select-object -ExpandProperty Hash > target/windows/Espanso-Win-Portable-x86_64.zip.sha256.txt
          Get-FileHash target/windows/installer/Espanso-Win-Installer-x86_64.exe -Algorithm SHA256 | select-object -ExpandProperty Hash > target/windows/installer/Espanso-Win-Installer-x86_64.exe.sha256.txt
      - uses: actions/upload-artifact@v2
        name: "Upload artifacts"
        with:
          name: Windows Artifacts
          path: |
            target/windows/installer/Espanso-Win-Installer-x86_64.exe
            target/windows/Espanso-Win-Portable-x86_64.zip
            target/windows/installer/Espanso-Win-Installer-x86_64.exe.sha256.txt
            target/windows/Espanso-Win-Portable-x86_64.zip.sha256.txt
      - name: Upload artifacts to Github Releases
        run: |
          gh release upload ${{ needs.extract-version.outputs.espanso_version }} target/windows/installer/Espanso-Win-Installer-x86_64.exe target/windows/Espanso-Win-Portable-x86_64.zip target/windows/installer/Espanso-Win-Installer-x86_64.exe.sha256.txt target/windows/Espanso-Win-Portable-x86_64.zip.sha256.txt
  
  linux-x11:
    needs: ["extract-version"]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Print target version
        run: |
          echo Using version ${{ needs.extract-version.outputs.espanso_version }}
      - name: Build docker image
        run: |
          sudo docker build -t espanso-ubuntu . -f .github/scripts/ubuntu/Dockerfile
      - name: Build AppImage
        run: |
          sudo docker run --rm -v "$(pwd):/shared" espanso-ubuntu espanso/.github/scripts/ubuntu/build_appimage.sh
      - uses: actions/upload-artifact@v2
        name: "Upload artifacts"
        with:
          name: Linux X11 Artifacts
          path: |
            Espanso-X11.AppImage
            Espanso-X11.AppImage.sha256.txt
      - name: Upload artifacts to Github Releases
        run: |
          gh release upload ${{ needs.extract-version.outputs.espanso_version }} Espanso-X11.AppImage Espanso-X11.AppImage.sha256.txt

  macos-intel:
    needs: ["extract-version"]
    runs-on: macos-11

    steps:
      - uses: actions/checkout@v2
      - name: Print target version
        run: |
          echo Using version ${{ needs.extract-version.outputs.espanso_version }}
      - name: Install cargo-make
        run: |
          cargo install --force cargo-make
      - name: Test
        run: cargo make test-binary --profile release
      - name: Build
        run: cargo make create-bundle --profile release
      - name: Create ZIP archive
        run: |
          ditto -c -k --sequesterRsrc --keepParent target/mac/Espanso.app Espanso-Mac-Intel.zip
      - name: Calculate hashes
        run: |
          shasum -a 256 Espanso-Mac-Intel.zip > Espanso-Mac-Intel.zip.sha256.txt
      - uses: actions/upload-artifact@v2
        name: "Upload artifacts"
        with:
          name: Mac Intel Artifacts
          path: |
            Espanso-Mac-Intel.zip
            Espanso-Mac-Intel.zip.sha256.txt
      - name: Upload artifacts to Github Releases
        run: |
          gh release upload ${{ needs.extract-version.outputs.espanso_version }} Espanso-Mac-Intel.zip Espanso-Mac-Intel.zip.sha256.txt
  
  macos-m1:
    needs: ["extract-version"]
    runs-on: macos-11

    steps:
      - uses: actions/checkout@v2
      - name: Print target version
        run: |
          echo Using version ${{ needs.extract-version.outputs.espanso_version }}
      - name: Install rust target
        run: rustup update && rustup target add aarch64-apple-darwin
      - name: Install cargo-make
        run: |
          cargo install --force cargo-make
      - name: Build
        run: cargo make create-bundle --profile release --env BUILD_ARCH=aarch64-apple-darwin
      - name: Codesign executable
        env: 
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
          MACOS_CI_KEYCHAIN_PWD: ${{ secrets.MACOS_CI_KEYCHAIN_PWD }}
        run: |
          echo $MACOS_CERTIFICATE | base64 â€”decode > certificate.p12
          security create-keychain -p $MACOS_CI_KEYCHAIN_PWD build.keychain security default-keychain -s build.keychain
          security unlock-keychain -p $MACOS_CI_KEYCHAIN_PWD build.keychain
          security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k $MACOS_CI_KEYCHAIN_PWD build.keychain
          /usr/bin/codesign --force -s "Espanso CI Self-Signed" target/mac/Espanso.app -v
      - name: Create ZIP archive
        run: |
          ditto -c -k --sequesterRsrc --keepParent target/mac/Espanso.app Espanso-Mac-M1.zip
      - name: Calculate hashes
        run: |
          shasum -a 256 Espanso-Mac-M1.zip > Espanso-Mac-M1.zip.sha256.txt
      - uses: actions/upload-artifact@v2
        name: "Upload artifacts"
        with:
          name: Mac M1 Artifacts
          path: |
            Espanso-Mac-M1.zip
            Espanso-Mac-M1.zip.sha256.txt
      - name: Upload artifacts to Github Releases
        run: |
          gh release upload ${{ needs.extract-version.outputs.espanso_version }} Espanso-Mac-M1.zip Espanso-Mac-M1.zip.sha256.txt
  # macos-intel:
  #   runs-on: macos-11

  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Install cargo-make
  #       run: |
  #         cargo install --force cargo-make
  #     - name: Run test suite
  #       run: cargo make test
  #     - name: Build
  #       run: |
  #         cargo make build-binary       ./Alacritty-${GITHUB_REF##*/}-installer.msi $GITHUB_TOKEN
  # linux:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Install dependencies
  #       run: |
  #         sudo apt-get install cmake pkg-config libfreetype6-dev libfontconfig1-dev \
  #           libxcb-xfixes0-dev libxkbcommon-dev python3
  #     - name: Test
  #       run: cargo test --release
  #     - name: Gzip manpage
  #       run: gzip -c "./extra/alacritty.man" > "./alacritty.1.gz"
  #     - name: Upload Assets
  #       run: |
  #         mv ./extra/logo/alacritty-term.svg ./Alacritty.svg
  #         ./.github/workflows/upload_asset.sh ./Alacritty.svg $GITHUB_TOKEN
  #         ./.github/workflows/upload_asset.sh ./alacritty.1.gz $GITHUB_TOKEN
  #         ./.github/workflows/upload_asset.sh ./extra/completions/alacritty.bash $GITHUB_TOKEN
  #         ./.github/workflows/upload_asset.sh ./extra/completions/alacritty.fish $GITHUB_TOKEN
  #         ./.github/workflows/upload_asset.sh ./extra/completions/_alacritty $GITHUB_TOKEN
  #         ./.github/workflows/upload_asset.sh ./extra/linux/Alacritty.desktop $GITHUB_TOKEN
  #         ./.github/workflows/upload_asset.sh ./extra/alacritty.info $GITHUB_TOKEN
  #         ./.github/workflows/upload_asset.sh ./alacritty.yml $GITHUB_TOKEN